pipeline {
    agent any
    triggers { pollSCM('H/2 * * * *') }

    stages {
        stage('Op-2133506a-S1') {
            steps {
                script {
                    sh 'docker rmi -f qa-bkup-image || true'
                    sh 'docker commit 2133506a-qa-svr qa-bkup-image'
                    sh "bolt script run '/operate/2133506a/2133506a.script' --targets 2133506a-qa-svr"
                    echo "Op-2133506a-S1: QA web server is backup and updated"
                }
            }
        }
        stage('Op-2133506a-S2') {
            steps {
                echo "Op-2133506a-S2: Checking on whether QA server is running after update"
                sh 'curl -Is http://localhost:33200 | head -n 1 > /tmp/qa-result-file'
                sh 'cat /tmp/qa-result-file'
            }
        }
        stage('Op-2133506a-S3') {
            steps {
                script {
                    def qaStatus = sh(script: "curl -Is http://localhost:33200 | head -n 1", returnStdout: true).trim()
                    if (qaStatus.contains("200 OK")) {
                        echo "Op-2133506a-S3: Proceed to roll out to Prod server"
                    } else {
                        sh 'docker run --rm --name rollback-qa qa-bkup-image'
                        echo "Op-2133506a-S3: QA server fails after update and is rolled back"
                        error('Aborting')
                    }
                }
            }
        }
        stage('Op-2133506a-S4') {
            steps {
                script {
                    sh 'docker rmi -f prod_bkup_image || true'
                    sh 'docker commit 2133506a-prod-svr prod_bkup_image'
                    sh "bolt script run '/operate/2133506a/2133506a.script' --targets 2133506a-prod-svr"
                    echo "Op-2133506a-S4: Prod web server is backup and updated"
                }
            }
        }
        stage('Op-2133506a-S5') {
            steps {
                echo "Op-2133506a-S5: Checking on whether Prod server is running after update"
                sh 'curl -Is http://localhost:33500 | head -n 1 > /tmp/prod-result-file'
                sh 'cat /tmp/prod-result-file'
            }
        }
        stage('Op-2133506a-S6') {
            steps {
                script {
                    def prodStatus = sh(script: "curl -Is http://localhost:33500 | head -n 1", returnStdout: true).trim()
                    if (prodStatus.contains("200 OK")) {
                        echo "Op-2133506a-S6: Proceed to release Prod web server to production"
                    } else {
                        sh 'docker run --rm --name rollback-prod prod_bkup_image'
                        echo "Op-2133506a-S6: Prod web server is rolled back"
                        error('Aborting')
                    }
                }
            }
        }
        stage('Op-2133506a-S7') {
            steps {
                echo "Op-2133506a-S7: Prod web server is monitored and ready to serve."
            }
        }
    }
}
